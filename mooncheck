#!/usr/bin/env moon


unless arg[1]
	print "Usage: mooncheck <filename.moon> [<luacheck-arguments]"
	os.exit 1

class Cmd
	new: (cmd) =>
		@cmd = cmd
		@
	arg: (...) =>
		if @args
			@args ..= " " .. table.concat {...}, " "
		else
			@args = table.concat {...}, " "

		@
	run: =>
		cmd = io.popen "#{@cmd} #{@args} 2>&1"
		ret = cmd\read "*a"
		_, _, ec = cmd\close!
		ret, ec

opt, target = "", ""

for i in *arg
	if i\match "^%-[a-zA-Z]+$"
		opt ..= " #{i}"
	else
		target = i

cont, ec = Cmd("moonc")\arg("-p", target)\run!

if ec > 0
	print "E: #{target}:" .. cont\match("\n.-(%d+).*$") .. ": Failed to parse"
	os.exit 1

fn = os.tmpname!
fh = io.open fn, "a+"
fh\write cont
fh\seek "set"
lc_tmp = Cmd("luacheck")\arg(opt, "--formatter", "plain", "--no-color", fn)\run!
fh\close!
os.remove fn
mooncx_tmp = Cmd("moonc")\arg("-X", target)\run!
buf = {}

for l in mooncx_tmp\gmatch "(.-)\n"
	b, a = l\match("^%d+%s+(%d+):%[.*%]%s+>>%s(%d+)")

	if b_ = tonumber b
		buf[b_] = tonumber a

for l in lc_tmp\gmatch "(.-)\n"
	ln, warn = l\match(":(%d+):.-%s+(.*)$")

	if ln_ = tonumber ln
		print "W: #{target}:#{buf[ln_]}:#{warn}" if buf[ln_]

